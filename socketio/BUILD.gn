# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# EHsc for exception. W4 & w for warning levels

import("//build/config/sanitizers/sanitizers.gni")
import("//build_overrides/build.gni")
import("//build/config/arm.gni")
import("//testing/libfuzzer/fuzzer_test.gni")

config("socketio_config") {
  include_dirs = [ 

  "client/src/base/include", 
  "client/src/http_parser",
  "client/src/crypto/include",
  "client/src/json/include",
  "client/src/net/include",
   "client/src/http/include",
   "client/src/libuv/include",
   "client/src/libuv/src",
   "client/src/libuv/src/unix",
   "client/src/signal/include",

  ]

    if (!is_win) 
    {
      cflags = [ "-fexceptions", "-Wno-error" ]
      cflags_cc = [ "-fexceptions", "-Wno-error" , "-Wno-inconsistent-missing-override",
        "-Wno-overloaded-virtual"]


    }
    else
    {

        if (is_clang) {
            cflags_cc = ["-w",  "/EHsc" , "-Wno-error" , "-Wno-inconsistent-missing-override",
            "-Wno-overloaded-virtual"]
        }
        else
        {
           cflags_cc = ["/W0",  "/EHsc"]
        }

        defines = [  "SCY_WIN",  ]

        libs = [
      
        "userenv.lib",

        ]

    }

}

config("socketio_private_config") {
  defines = [
    # Prefer alloca() over variable length arrays which are often inefficient;
    # the opus code will automatically handle this correctly per-platform.
    #"USE_ALLOCA",
    #"HAVE_ALLOCA_H",
  ]


 

  if (is_win) {
    

  } else {
   
  }




  # Note: Do not add any defines or include_dirs to this target, those should all
  # go in the opus_private_config so they can be shared with intrinsic targets.
  source_set("socketioset") {
 
    include_dirs = [ 

    "client/src/base/include", 
    "client/src/http_parser",
    "client/src/crypto/include",
    "client/src/json/include",
    "client/src/net/include",
     "client/src/http/include",
     "client/src/libuv/include",
     "client/src/libuv/src",
     "client/src/libuv/src/unix",
     "client/src/signal/include",
     "//third_party/boringssl/src/include",

    ]


    sources = [
    #"SocketIO.h",
    #"SocketIO.cpp",
    "client/src/base/include/base/buffer.h",
    "client/src/base/include/base/Timer.h",
    "client/src/base/include/base/sha1.h",
    "client/src/base/include/base/base64.h",
    "client/src/base/include/base/packet.h",
    "client/src/base/include/base/packetstream.h",
    "client/src/base/include/base/util.h",
    "client/src/base/include/base/time.h",
    "client/src/base/include/base/datetime.h",
    "client/src/base/include/base/error.h",
    "client/src/base/include/base/byteorder.h",
    "client/src/base/include/base/uuid.h",
    "client/src/base/include/base/signalsHandler.h",
    "client/src/base/include/base/define.h",
    "client/src/base/include/base/collection.h",
    "client/src/base/include/base/base.h",
    "client/src/base/include/base/queue.h",

    "client/src/base/include/base/process.h",
    "client/src/base/include/base/singleton.h",
    "client/src/base/include/base/thread.h",
    "client/src/base/include/base/platform.h",
    "client/src/base/include/base/interface.h",
    "client/src/base/include/base/logger.h",
    "client/src/base/include/base/application.h",
    "client/src/base/include/base/idler.h",
    "client/src/base/include/base/filesystem.h",
    "client/src/base/include/base/packetqueue.h",
    "client/src/base/include/base/random.h",
    "client/src/base/include/base/hex.h",
    "client/src/base/src/util.cpp",
    "client/src/base/src/process.cpp",
    "client/src/base/src/logger.cpp",
    "client/src/base/src/thread.cpp",
    "client/src/base/src/time.cpp",
    "client/src/base/src/Timer.cpp",
    "client/src/base/src/random.cpp",
    "client/src/base/src/application.cpp",
    "client/src/base/src/collection.cpp",
    "client/src/base/src/buffer.cpp",
    "client/src/base/src/datetime.cpp",
    "client/src/base/src/filesystem.cpp",
    "client/src/base/src/packetstream.cpp",

    "client/src/base/src/base64.cpp",
    "client/src/base/src/idler.cpp",
    "client/src/base/src/signalsHandler.cpp",
    "client/src/base/src/platform.cpp",
    "client/src/base/src/sha1.cpp",

    "client/src/net/include/net/PortManager.h",
    "client/src/net/include/net/netInterface.h",
    "client/src/net/include/net/UdpSocket.h",
    "client/src/net/include/net/IP.h",
    "client/src/net/include/net/SslConnection.h",
    "client/src/net/include/net/ssladapter.h",
    "client/src/net/include/net/TcpServer.h",
    "client/src/net/include/net/TcpConnection.h",
    "client/src/net/include/net/dns.h",
    "client/src/net/src/TcpServer.cpp",
    "client/src/net/src/PortManager.cpp",
    "client/src/net/src/SslConnection.cpp",
    "client/src/net/src/IP.cpp",
    "client/src/net/src/TcpConnection.cpp",
    "client/src/net/src/UdpSocket.cpp",
    "client/src/net/src/ssladapter.cpp",

    "client/src/http/include/http/HTTPResponder.h",
    "client/src/http/include/http/responder.h",
    "client/src/http/include/http/request.h",
    "client/src/http/include/http/util.h",
    "client/src/http/include/http/message.h",
    "client/src/http/include/http/packetizers.h",
    "client/src/http/include/http/url.h",
    "client/src/http/include/http/client.h",
    "client/src/http/include/http/websocket.h",
    "client/src/http/include/http/HttpServer.h",
    "client/src/http/include/http/HttpsClient.h",
    "client/src/http/include/http/cookie.h",
    "client/src/http/include/http/HttpClient.h",
    "client/src/http/include/http/http.h",
    "client/src/http/include/http/response.h",
    "client/src/http/include/http/HttpConn.h",
    "client/src/http/include/http/HttpsConn.h",
    "client/src/http/include/http/parser.h",
    "client/src/http/include/http/form.h",

    "client/src/http/src/HTTPResponder.cpp",
    "client/src/http/src/client.cpp",
    "client/src/http/src/httputil.cpp",
    "client/src/http/src/request.cpp",
    "client/src/http/src/response.cpp",
    "client/src/http/src/HttpServer.cpp",
    "client/src/http/src/HttpsConn.cpp",
    "client/src/http/src/cookie.cpp",
    "client/src/http/src/HttpsClient.cpp",
    "client/src/http/src/HttpConn.cpp",
    "client/src/http/src/message.cpp",
    "client/src/http/src/parser.cpp",
    "client/src/http/src/packetizers.cpp",
    "client/src/http/src/url.cpp",
    "client/src/http/src/HttpClient.cpp",
    "client/src/http/src/websocket.cpp",
    "client/src/http/src/form.cpp",


    "client/src/signal/include/socketio/packet.h",
    "client/src/signal/include/socketio/socketioClient.h",
    "client/src/signal/src/socketioClient.cpp",
    "client/src/signal/src/packet.cpp",

    "client/src/http_parser/http_parser.h",
    "client/src/http_parser/http_parser.cpp",

    "client/src/json/src/json.cpp",
    "client/src/json/src/configuration.cpp",

   
    ]

  
    #cflags = [ "-fexceptions" ]
    #cflags_cc = [ "-fexceptions"]


    configs += [
       ":socketio_private_config",
    ]
    public_configs = [ ":socketio_config" ]

    }



    static_library("libuv") {
 
    include_dirs = [ 

     "client/src/libuv/include",
     "client/src/libuv/src",
     "client/src/libuv/src/unix",
 
    ]


    sources = [
    "client/src/libuv/src/fs-poll.cpp",
    "client/src/libuv/src/strscpy.h",
    "client/src/libuv/src/version.cpp",
    "client/src/libuv/src/uv-common.h",
    "client/src/libuv/src/random.cpp",
    "client/src/libuv/src/uv-data-getter-setters.cpp",
    "client/src/libuv/src/queue.h",
    "client/src/libuv/src/heap-inl.h",
    "client/src/libuv/src/inet.cpp",
    "client/src/libuv/src/convert..h",
    "client/src/libuv/src/timer.cpp",
    "client/src/libuv/src/strscpy.cpp",
    "client/src/libuv/src/threadpool.cpp",
    "client/src/libuv/src/uv-common.cpp",
    ]

    if (!is_win) {
    sources += [
      "client/src/libuv/src/unix/async.cpp",
       "client/src/libuv/src/unix/core.cpp",
       "client/src/libuv/src/unix/dl.cpp",
       "client/src/libuv/src/unix/fs.cpp",
       "client/src/libuv/src/unix/getaddrinfo.cpp",
       "client/src/libuv/src/unix/getnameinfo.cpp",
       "client/src/libuv/src/unix/loop-watcher.cpp",
       "client/src/libuv/src/unix/loop.cpp",
       "client/src/libuv/src/unix/pipe.cpp",
       "client/src/libuv/src/unix/poll.cpp",
       "client/src/libuv/src/unix/process.cpp",
       "client/src/libuv/src/unix/random-devurandom.cpp",
       "client/src/libuv/src/unix/signal.cpp",
       "client/src/libuv/src/unix/stream.cpp",
       "client/src/libuv/src/unix/tcp.cpp",
       "client/src/libuv/src/unix/thread.cpp",
       "client/src/libuv/src/unix/tty.cpp",
       "client/src/libuv/src/unix/udp.cpp",
       ]

    }
    else
    {
       sources += [
       "client/src/libuv/src/win/async.cpp",
       "client/src/libuv/src/win/core.cpp",
       "client/src/libuv/src/win/detect-wakeup.cpp",
       "client/src/libuv/src/win/dl.cpp",
       "client/src/libuv/src/win/error.cpp",
       "client/src/libuv/src/win/fs.cpp",
       "client/src/libuv/src/win/fs-event.cpp",
       "client/src/libuv/src/win/getaddrinfo.cpp",
       "client/src/libuv/src/win/getnameinfo.cpp",
       "client/src/libuv/src/win/handle.cpp",
       "client/src/libuv/src/win/loop-watcher.cpp",
       "client/src/libuv/src/win/pipe.cpp",
       "client/src/libuv/src/win/thread.cpp",
       "client/src/libuv/src/win/poll.cpp",
       "client/src/libuv/src/win/process.cpp",
       "client/src/libuv/src/win/process-stdio.cpp",
       "client/src/libuv/src/win/signal.cpp",
       "client/src/libuv/src/win/snprintf.cpp",
       "client/src/libuv/src/win/stream.cpp",
       "client/src/libuv/src/win/tcp.cpp",
       "client/src/libuv/src/win/tty.cpp",
       "client/src/libuv/src/win/udp.cpp",
       "client/src/libuv/src/win/util.cpp",
       "client/src/libuv/src/win/winapi.cpp",
       "client/src/libuv/src/win/winsock.cpp",
       "client/src/libuv/src/idna.cpp",
       ]
    }


    if (is_linux ) {

      sources += [

       "client/src/libuv/src/unix/linux-core.cpp",
       "client/src/libuv/src/unix/linux-inotify.cpp",
       "client/src/libuv/src/unix/linux-syscalls.cpp",
       "client/src/libuv/src/unix/proctitle.cpp",
       "client/src/libuv/src/unix/random-getrandom.cpp",
       "client/src/libuv/src/unix/random-sysctl.cpp",

      ]

    }

    if (is_android ) {
       sources += [

       "client/src/libuv/src/unix/android-ifaddrs.cpp",
       "client/src/libuv/src/unix/linux-core.cpp",
       "client/src/libuv/src/unix/linux-inotify.cpp",
       "client/src/libuv/src/unix/linux-syscalls.cpp",
       #"client/src/libuv/src/unix/procfs-exepath.cpp",
       "client/src/libuv/src/unix/pthread-fixes.cpp",
       "client/src/libuv/src/unix/random-getrandom.cpp",
       "client/src/libuv/src/unix/random-sysctl.cpp",
       #"client/src/libuv/src/unix/sysinfo-loadavg.cpp",
    ]

     libs = [ "log" ]
    }


    configs += [
       ":socketio_private_config",
    ]
    public_configs = [ ":socketio_config" ]

    }




  executable("decodeH264") 
  {
    sources = [
      "client/src/ffmpeg/h24Decoder/H264_Decoder.cpp",
      "client/src/ffmpeg/h24Decoder/H264_Decoder.h",
      "client/src/ffmpeg/h24Decoder/main.cpp",
    ]
    deps = [
     #"//:webrtc_common",
    ]

    include_dirs = [
      "//third_party/ffmpeg",
      "//third_party/ffmpeg/chromium/config/Chrome/win/x64",
    ]


    if (is_linux) {
      cflags = [ "-fexceptions" ]
    }

      if (is_win) {
    libs = [
       "userenv.lib",
      "iphlpapi.lib",
      #"c:/workspace/webrtc/src/out/m89/obj/webrtc.lib",
      #"c:/workspace/webrtc/src/out/m89/ffmpeg.dll.lib",
      "c:/workspace/webrtc/src/out/m89/obj/third_party/ffmpeg/ffmpeg_nasm.lib",
      "c:/workspace/webrtc/src/out/m89/obj/third_party/ffmpeg/ffmpeg_internal.lib",
      "E:\UnrealEngine\Engine\Source\ThirdParty\ffmpeg4.2\lib\fdk-aac.lib",
      #"D:\fb\local64\bin-video\avcodec.lib",
      #"D:\fb\local64\bin-video\avformat.lib",
      #"D:\fb\local64\bin-video\avutil.lib",
      "D:\fb\local64\lib\libx264.lib",
      "dxgi.lib",
      "d3d11.lib",   


    ]
    }
  }

 
  executable("encodeH264") 
  {
    sources = [
      "client/src/ffmpeg/h264Encoder/H264_Encoder.cpp",
      "client/src/ffmpeg/h264Encoder/H264_Encoder.h",
      "client/src/ffmpeg/h264Encoder/fftests.cpp",
    ]
    deps = [
     #"//:webrtc_common",
    ]

    include_dirs = [
      "//third_party/ffmpeg",
      "//third_party/ffmpeg/chromium/config/Chrome/win/x64",
    ]


    if (is_linux) {
      cflags = [ "-fexceptions" ]
    }

      if (is_win) {
    libs = [
       "userenv.lib",
      "iphlpapi.lib",
      #"c:/workspace/webrtc/src/out/m89/obj/webrtc.lib",
      #"c:/workspace/webrtc/src/out/m89/ffmpeg.dll.lib",
      "c:/workspace/webrtc/src/out/m89/obj/third_party/ffmpeg/ffmpeg_nasm.lib",
      "c:/workspace/webrtc/src/out/m89/obj/third_party/ffmpeg/ffmpeg_internal.lib",
      "E:\UnrealEngine\Engine\Source\ThirdParty\ffmpeg4.2\lib\fdk-aac.lib",
      #"D:\fb\local64\bin-video\avcodec.lib",
      #"D:\fb\local64\bin-video\avformat.lib",
      #"D:\fb\local64\bin-video\avutil.lib",
      "D:\fb\local64\lib\libx264.lib",
      "dxgi.lib",
      "d3d11.lib",   


    ]
    }
  }


  executable("testme") {
    sources = [
      # sources
      "main.cpp",
    ]
    deps = [
      ":socketio",
      ":libuv",
       "//third_party/boringssl"
    ]
    if (is_linux) {
      cflags = [ "-fexceptions" ]
    }

      if (is_win) {
    libs = [
      "iphlpapi.lib",
    ]
    }
  }

  executable("testhttp") {
    sources = [
      "mainhttp.cpp",
    ]
    deps = [
      ":socketioset",
      ":libuv",
       "//third_party/boringssl"
    ]
    if (is_linux) {
      cflags = [ "-fexceptions" ]
    }

      if (is_win) {
    libs = [
      "iphlpapi.lib",
    ]
    }
  }

  static_library("socketio") {
 
    sources = [
    "Signaler.cpp",
    "Signaler.h",
    ]
    deps = [
      ":socketioset",
    ]
   }

  static_library("httpStream") {
 
    include_dirs = [ 

    "client/src/base/include", 
    "client/src/http_parser",
    "client/src/crypto/include",
    "client/src/json/include",
    "client/src/net/include",
     "client/src/http/include",
     "client/src/libuv/include",
     "client/src/libuv/src",
     "client/src/libuv/src/unix",
     "client/src/signal/include",
     #"//third_party/boringssl/src/include",

    # if(is_linux) {
    #    "//workspace/webrtc_android/src/third_party/1.1.1c/include/Linux/x86_64-unknown-linux-gnu/",
    #  }
    #  else
    #  {
        "//third_party/1.1.1/Include/Win64/VS2015/",
     # }

    ]


    sources = [
    "client/src/base/include/base/buffer.h",
    "client/src/base/include/base/Timer.h",
    "client/src/base/include/base/sha1.h",
    "client/src/base/include/base/base64.h",
    "client/src/base/include/base/packet.h",
    "client/src/base/include/base/packetstream.h",
    "client/src/base/include/base/util.h",
    "client/src/base/include/base/time.h",
    "client/src/base/include/base/datetime.h",
    "client/src/base/include/base/error.h",
    "client/src/base/include/base/byteorder.h",
    "client/src/base/include/base/uuid.h",
    "client/src/base/include/base/signalsHandler.h",
    "client/src/base/include/base/define.h",
    "client/src/base/include/base/collection.h",
    "client/src/base/include/base/base.h",
    "client/src/base/include/base/queue.h",

    "client/src/base/include/base/process.h",
    "client/src/base/include/base/singleton.h",
    "client/src/base/include/base/thread.h",
    "client/src/base/include/base/platform.h",
    "client/src/base/include/base/interface.h",
    "client/src/base/include/base/logger.h",
    "client/src/base/include/base/application.h",
    "client/src/base/include/base/idler.h",
    "client/src/base/include/base/filesystem.h",
    "client/src/base/include/base/packetqueue.h",
    "client/src/base/include/base/random.h",
    "client/src/base/include/base/hex.h",
    "client/src/base/src/util.cpp",
    "client/src/base/src/process.cpp",
    "client/src/base/src/logger.cpp",
    "client/src/base/src/thread.cpp",
    "client/src/base/src/time.cpp",
    "client/src/base/src/Timer.cpp",
    "client/src/base/src/random.cpp",
    "client/src/base/src/application.cpp",
    "client/src/base/src/collection.cpp",
    "client/src/base/src/buffer.cpp",
    "client/src/base/src/datetime.cpp",
    "client/src/base/src/filesystem.cpp",
    "client/src/base/src/packetstream.cpp",

    "client/src/base/src/base64.cpp",
    "client/src/base/src/idler.cpp",
    "client/src/base/src/signalsHandler.cpp",
    "client/src/base/src/platform.cpp",
    "client/src/base/src/sha1.cpp",

    "client/src/net/include/net/PortManager.h",
    "client/src/net/include/net/netInterface.h",
    "client/src/net/include/net/UdpSocket.h",
    "client/src/net/include/net/IP.h",
    "client/src/net/include/net/SslConnection.h",
    "client/src/net/include/net/ssladapter.h",
    "client/src/net/include/net/TcpServer.h",
    "client/src/net/include/net/TcpConnection.h",
    "client/src/net/include/net/dns.h",
    "client/src/net/src/TcpServer.cpp",
    "client/src/net/src/PortManager.cpp",
    "client/src/net/src/SslConnection.cpp",
    "client/src/net/src/IP.cpp",
    "client/src/net/src/TcpConnection.cpp",
    "client/src/net/src/UdpSocket.cpp",
    "client/src/net/src/ssladapter.cpp",

    "client/src/http/include/http/HTTPResponder.h",
    "client/src/http/include/http/responder.h",
    "client/src/http/include/http/request.h",
    "client/src/http/include/http/util.h",
    "client/src/http/include/http/message.h",
    "client/src/http/include/http/packetizers.h",
    "client/src/http/include/http/url.h",
    "client/src/http/include/http/client.h",
    "client/src/http/include/http/websocket.h",
    "client/src/http/include/http/HttpServer.h",
    "client/src/http/include/http/HttpsClient.h",
    "client/src/http/include/http/cookie.h",
    "client/src/http/include/http/HttpClient.h",
    "client/src/http/include/http/http.h",
    "client/src/http/include/http/response.h",
    "client/src/http/include/http/HttpConn.h",
    "client/src/http/include/http/HttpsConn.h",
    "client/src/http/include/http/parser.h",
    "client/src/http/include/http/form.h",


    "client/src/http/src/HTTPResponder.cpp", 
    "client/src/http/src/HttpsConn.cpp",  
    "client/src/http/src/message.cpp",    
    "client/src/http/src/url.cpp",
    "client/src/http/src/HttpClient.cpp", 
    "client/src/http/src/client.cpp", 
    "client/src/http/src/packetizers.cpp",
    "client/src/http/src/websocket.cpp",
   "client/src/http/src/HttpConn.cpp", 
   "client/src/http/src/cookie.cpp", 
   "client/src/http/src/parser.cpp",
   "client/src/http/src/HttpServer.cpp",  
   "client/src/http/src/form.cpp",    
   "client/src/http/src/request.cpp",
   "client/src/http/src/HttpsClient.cpp",  
   "client/src/http/src/httputil.cpp", 
   "client/src/http/src/response.cpp",


    "client/src/http_parser/http_parser.h",
    "client/src/http_parser/http_parser.cpp",

    "client/src/json/src/json.cpp",
    "client/src/json/src/configuration.cpp",


 

   
    ]

  
    #cflags = [ "-fexceptions" ]
    #cflags_cc = [ "-fexceptions"]
    
    defines = [  "HTTPSSL",  ]

    configs += [
       ":socketio_private_config",
    ]
    public_configs = [ ":socketio_config" ]

    }


   shared_library("signaler") {
    sources = [
      # sources
      "SignalerAPI.cpp",
      "SignalerAPI.h",
      "Signaler.cpp",
    "Signaler.h",
    ]
    deps = [
      ":socketioset",
      ":libuv",
       "//third_party/boringssl"
    ]
    if (is_linux) {
      cflags = [ "-fexceptions", "-fdeclspec" ]
      defines = [  "SHAREDLIB",  ]
    }

    if (is_android) 
    {
      cflags = [ "-fexceptions", "-fdeclspec" ]
      defines = [  "SHAREDLIB", "WEBRTC_ANDROID", ]
    }

    if (is_win) {
     defines = [  "SHAREDLIB",  "WEBRTC_WIN", ]
    libs = [
      "iphlpapi.lib",
    ]
  }

  }


}



  executable("mp4") {
 
    include_dirs = [ 

    "client/src/base/include", 
    "client/src/http_parser",
    "client/src/crypto/include",
    "client/src/json/include",
    "client/src/net/include",
     "client/src/http/include",
     "client/src/libuv/include",
     "client/src/libuv/src",
     "client/src/libuv/src/unix",
     "client/src/signal/include",
     "client/src/ffmpeg/ffmpeg_cpp/",
     "client/src/ffmpeg/ffmpeg_cpp/compat/zlib",
     "client/src/ffmpeg/ffmpeg_cpp/compat",
     "client/src/ffmpeg/ffmpeg_cpp/codec/",
     "client/src/ffmpeg/ffmpeg_cpp/audio/",
     "client/src/ffmpeg/ffmpeg_cpp/mp4probe/",
     "client/src/ffmpeg/ffmpeg_cpp/codec/x86/",
     "client/src/broadcast/include/",
     "client/src/ffmpeg/include/",
     "//third_party/abseil-cpp", 
     "x264/",

     #"//third_party/boringssl/src/include",

    # if(is_linux) {
    #    "//workspace/webrtc_android/src/third_party/1.1.1c/include/Linux/x86_64-unknown-linux-gnu/",
    #  }
    #  else
    #  {
        "//third_party/1.1.1/Include/Win64/VS2015/",
     # }

    ]


    sources = [
    




#    "client/src/json/src/json.cpp",
#    "client/src/json/src/configuration.cpp",



"client/src/ffmpeg/ffmpeg_cpp/aac_ac3_parser.cpp",
"client/src/ffmpeg/ffmpeg_cpp/aac_ac3_parser.h",
"client/src/ffmpeg/ffmpeg_cpp/ac3.h",
"client/src/ffmpeg/ffmpeg_cpp/ac3_parser.cpp",
"client/src/ffmpeg/ffmpeg_cpp/ac3_parser.h",
"client/src/ffmpeg/ffmpeg_cpp/ac3tab.cpp",
"client/src/ffmpeg/ffmpeg_cpp/ac3tab.h",
"client/src/ffmpeg/ffmpeg_cpp/aes.cpp",
"client/src/ffmpeg/ffmpeg_cpp/aes.h",
"client/src/ffmpeg/ffmpeg_cpp/aes_ctr.cpp",
"client/src/ffmpeg/ffmpeg_cpp/aes_ctr.h",
"client/src/ffmpeg/ffmpeg_cpp/aes_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/allcodecs.cpp",
"client/src/ffmpeg/ffmpeg_cpp/allformats.cpp",
"client/src/ffmpeg/ffmpeg_cpp/atomic.cpp",
"client/src/ffmpeg/ffmpeg_cpp/atomic.h",
"client/src/ffmpeg/ffmpeg_cpp/atomic_gcc.h",
"client/src/ffmpeg/ffmpeg_cpp/atomic_win32.h",
"client/src/ffmpeg/ffmpeg_cpp/attributes.h",
"client/src/ffmpeg/ffmpeg_cpp/audio_frame_queue.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio_frame_queue.h",
"client/src/ffmpeg/ffmpeg_cpp/audiointerleave.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audiointerleave.h",
"client/src/ffmpeg/ffmpeg_cpp/av_utils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avassert.h",
"client/src/ffmpeg/ffmpeg_cpp/avbuffer.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avbuffer.h",
"client/src/ffmpeg/ffmpeg_cpp/avc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avc.h",
"client/src/ffmpeg/ffmpeg_cpp/avcodec.h",
"client/src/ffmpeg/ffmpeg_cpp/avdevthread.h",
"client/src/ffmpeg/ffmpeg_cpp/avformat.h",
"client/src/ffmpeg/ffmpeg_cpp/avframe.h",
"client/src/ffmpeg/ffmpeg_cpp/avio.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avio.h",
"client/src/ffmpeg/ffmpeg_cpp/avio_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/aviobuf.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avpacket.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avparser.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avparser.h",
"client/src/ffmpeg/ffmpeg_cpp/avstring.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avstring.h",
"client/src/ffmpeg/ffmpeg_cpp/avthread.h",
"client/src/ffmpeg/ffmpeg_cpp/avtime.cpp",
"client/src/ffmpeg/ffmpeg_cpp/avtime.h",
"client/src/ffmpeg/ffmpeg_cpp/avutil.h",
"client/src/ffmpeg/ffmpeg_cpp/bitstream.cpp",
"client/src/ffmpeg/ffmpeg_cpp/bitstream_filters.cpp",
"client/src/ffmpeg/ffmpeg_cpp/blockdsp.h",
"client/src/ffmpeg/ffmpeg_cpp/bprint.cpp",
"client/src/ffmpeg/ffmpeg_cpp/bprint.h",
"client/src/ffmpeg/ffmpeg_cpp/bsf.cpp",
"client/src/ffmpeg/ffmpeg_cpp/bsf.h",
"client/src/ffmpeg/ffmpeg_cpp/bswap.h",
"client/src/ffmpeg/ffmpeg_cpp/buffer_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/bytestream.h",
"client/src/ffmpeg/ffmpeg_cpp/channel_layout.cpp",
"client/src/ffmpeg/ffmpeg_cpp/channel_layout.h",
"client/src/ffmpeg/ffmpeg_cpp/codec.h",
"client/src/ffmpeg/ffmpeg_cpp/codec_desc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/color_utils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/color_utils.h",
"client/src/ffmpeg/ffmpeg_cpp/common.h",
"client/src/ffmpeg/ffmpeg_cpp/config.h",
"client/src/ffmpeg/ffmpeg_cpp/constant.h",
"client/src/ffmpeg/ffmpeg_cpp/cpu.cpp",
"client/src/ffmpeg/ffmpeg_cpp/cpu.h",
"client/src/ffmpeg/ffmpeg_cpp/cpu_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/crc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/crc.h",
"client/src/ffmpeg/ffmpeg_cpp/cuvid.cpp",
"client/src/ffmpeg/ffmpeg_cpp/dct32.h",
"client/src/ffmpeg/ffmpeg_cpp/dict.cpp",
"client/src/ffmpeg/ffmpeg_cpp/dict.h",
"client/src/ffmpeg/ffmpeg_cpp/dv.h",
"client/src/ffmpeg/ffmpeg_cpp/dynarray.h",
"client/src/ffmpeg/ffmpeg_cpp/error.cpp",
"client/src/ffmpeg/ffmpeg_cpp/error.h",
"client/src/ffmpeg/ffmpeg_cpp/error_resilience.h",
"client/src/ffmpeg/ffmpeg_cpp/eval.cpp",
"client/src/ffmpeg/ffmpeg_cpp/eval.h",
"client/src/ffmpeg/ffmpeg_cpp/faandct.cpp",
"client/src/ffmpeg/ffmpeg_cpp/faandct.h",
"client/src/ffmpeg/ffmpeg_cpp/ffmath.h",
"client/src/ffmpeg/ffmpeg_cpp/fft.h",
"client/src/ffmpeg/ffmpeg_cpp/fifo.cpp",
"client/src/ffmpeg/ffmpeg_cpp/fifo.h",
"client/src/ffmpeg/ffmpeg_cpp/file_open.cpp",
"client/src/ffmpeg/ffmpeg_cpp/flac.h",
"client/src/ffmpeg/ffmpeg_cpp/format.cpp",
"client/src/ffmpeg/ffmpeg_cpp/frame.cpp",
"client/src/ffmpeg/ffmpeg_cpp/frame_thread_encoder.cpp",
"client/src/ffmpeg/ffmpeg_cpp/frame_thread_encoder.h",
"client/src/ffmpeg/ffmpeg_cpp/get_bits.h",
"client/src/ffmpeg/ffmpeg_cpp/h264_mp4toannexb_bsf.cpp",
"client/src/ffmpeg/ffmpeg_cpp/h264chroma.h",
"client/src/ffmpeg/ffmpeg_cpp/hpeldsp.h",
"client/src/ffmpeg/ffmpeg_cpp/hwcontext.cpp",
"client/src/ffmpeg/ffmpeg_cpp/hwcontext.h",
"client/src/ffmpeg/ffmpeg_cpp/hwcontext_cuda.h",
"client/src/ffmpeg/ffmpeg_cpp/hwcontext_cuda_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/hwcontext_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/id3v1.cpp",
"client/src/ffmpeg/ffmpeg_cpp/id3v1.h",
"client/src/ffmpeg/ffmpeg_cpp/id3v2.cpp",
"client/src/ffmpeg/ffmpeg_cpp/id3v2.h",
"client/src/ffmpeg/ffmpeg_cpp/idctdsp.h",
"client/src/ffmpeg/ffmpeg_cpp/imgutils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/imgutils.h",
"client/src/ffmpeg/ffmpeg_cpp/imgutils_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/internal_avformat.h",
"client/src/ffmpeg/ffmpeg_cpp/internal_codec.h",
"client/src/ffmpeg/ffmpeg_cpp/internal_util.h",
"client/src/ffmpeg/ffmpeg_cpp/intfloat.h",
"client/src/ffmpeg/ffmpeg_cpp/intmath.cpp",
"client/src/ffmpeg/ffmpeg_cpp/intmath.h",
"client/src/ffmpeg/ffmpeg_cpp/intreadwrite.h",
"client/src/ffmpeg/ffmpeg_cpp/isom.cpp",
"client/src/ffmpeg/ffmpeg_cpp/isom.h",
"client/src/ffmpeg/ffmpeg_cpp/libfdk-aacdec.cpp",
"client/src/ffmpeg/ffmpeg_cpp/libfdk-aacenc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/libm.h",
"client/src/ffmpeg/ffmpeg_cpp/log.cpp",
"client/src/ffmpeg/ffmpeg_cpp/log.h",
"client/src/ffmpeg/ffmpeg_cpp/macros.h",
"client/src/ffmpeg/ffmpeg_cpp/mathematics.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mathematics.h",
"client/src/ffmpeg/ffmpeg_cpp/mathops.h",
"client/src/ffmpeg/ffmpeg_cpp/me_cmp.h",
"client/src/ffmpeg/ffmpeg_cpp/mem.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mem.h",
"client/src/ffmpeg/ffmpeg_cpp/mem_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/metadata.cpp",
"client/src/ffmpeg/ffmpeg_cpp/metadata.h",
"client/src/ffmpeg/ffmpeg_cpp/micro.h",
"client/src/ffmpeg/ffmpeg_cpp/motion_est.h",
"client/src/ffmpeg/ffmpeg_cpp/mov_chan.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mov_chan.h",
"client/src/ffmpeg/ffmpeg_cpp/movenc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/movenc.h",
"client/src/ffmpeg/ffmpeg_cpp/movenccenc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/movenccenc.h",
"client/src/ffmpeg/ffmpeg_cpp/movenchint.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpeg12data.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpeg12data.h",
"client/src/ffmpeg/ffmpeg_cpp/mpeg4_unpack_bframes_bsf.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpeg4audio.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpeg4audio.h",
"client/src/ffmpeg/ffmpeg_cpp/mpeg4video.h",
"client/src/ffmpeg/ffmpeg_cpp/mpeg_er.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpeg_er.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegaudiodata.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegaudiodata.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegpicture.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegpicture.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegutils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegutils.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideo.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideo.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideo_motion.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideodata.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideodata.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideodsp.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideodsp.h",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideoencdsp.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mpegvideoencdsp.h",
"client/src/ffmpeg/ffmpeg_cpp/mux.cpp",
"client/src/ffmpeg/ffmpeg_cpp/network.cpp",
"client/src/ffmpeg/ffmpeg_cpp/network.h",
"client/src/ffmpeg/ffmpeg_cpp/opt.cpp",
"client/src/ffmpeg/ffmpeg_cpp/opt.h",
"client/src/ffmpeg/ffmpeg_cpp/options.cpp",
"client/src/ffmpeg/ffmpeg_cpp/options_avformat.cpp",
"client/src/ffmpeg/ffmpeg_cpp/options_table.h",
"client/src/ffmpeg/ffmpeg_cpp/os_support.cpp",
"client/src/ffmpeg/ffmpeg_cpp/os_support.h",
"client/src/ffmpeg/ffmpeg_cpp/parseutils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/parseutils.h",
"client/src/ffmpeg/ffmpeg_cpp/pixblockdsp.h",
"client/src/ffmpeg/ffmpeg_cpp/pixdesc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/pixdesc.h",
"client/src/ffmpeg/ffmpeg_cpp/pixfmt.h",
"client/src/ffmpeg/ffmpeg_cpp/profiles.cpp",
"client/src/ffmpeg/ffmpeg_cpp/profiles.h",
"client/src/ffmpeg/ffmpeg_cpp/protocols.cpp",
"client/src/ffmpeg/ffmpeg_cpp/pthread.cpp",
"client/src/ffmpeg/ffmpeg_cpp/pthread_frame.cpp",
"client/src/ffmpeg/ffmpeg_cpp/pthread_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/pthread_slice.cpp",
"client/src/ffmpeg/ffmpeg_cpp/put_bits.h",
"client/src/ffmpeg/ffmpeg_cpp/qpeldsp.h",
"client/src/ffmpeg/ffmpeg_cpp/qsort.h",
"client/src/ffmpeg/ffmpeg_cpp/random_seed.cpp",
"client/src/ffmpeg/ffmpeg_cpp/random_seed.h",
"client/src/ffmpeg/ffmpeg_cpp/ratecontrol.cpp",
"client/src/ffmpeg/ffmpeg_cpp/ratecontrol.h",
"client/src/ffmpeg/ffmpeg_cpp/rational.cpp",
"client/src/ffmpeg/ffmpeg_cpp/rational.h",
"client/src/ffmpeg/ffmpeg_cpp/raw.cpp",
"client/src/ffmpeg/ffmpeg_cpp/raw.h",
"client/src/ffmpeg/ffmpeg_cpp/rawutils.cpp",
"client/src/ffmpeg/ffmpeg_cpp/replaygain_util.h",
"client/src/ffmpeg/ffmpeg_cpp/reverse.cpp",
"client/src/ffmpeg/ffmpeg_cpp/reverse.h",
"client/src/ffmpeg/ffmpeg_cpp/riff.cpp",
"client/src/ffmpeg/ffmpeg_cpp/riff.h",
"client/src/ffmpeg/ffmpeg_cpp/riffenc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/rl.cpp",
"client/src/ffmpeg/ffmpeg_cpp/rl.h",
"client/src/ffmpeg/ffmpeg_cpp/rtp.h",
"client/src/ffmpeg/ffmpeg_cpp/samplefmt.cpp",
"client/src/ffmpeg/ffmpeg_cpp/samplefmt.h",
"client/src/ffmpeg/ffmpeg_cpp/sha.cpp",
"client/src/ffmpeg/ffmpeg_cpp/sha.h",
"client/src/ffmpeg/ffmpeg_cpp/spherical.h",
"client/src/ffmpeg/ffmpeg_cpp/stereo3d.cpp",
"client/src/ffmpeg/ffmpeg_cpp/stereo3d.h",
"client/src/ffmpeg/ffmpeg_cpp/time_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/timecode.cpp",
"client/src/ffmpeg/ffmpeg_cpp/timecode.h",
"client/src/ffmpeg/ffmpeg_cpp/timestamp.h",
"client/src/ffmpeg/ffmpeg_cpp/url_avformat.cpp",
"client/src/ffmpeg/ffmpeg_cpp/url.h",
"client/src/ffmpeg/ffmpeg_cpp/utils_avformat.cpp",
"client/src/ffmpeg/ffmpeg_cpp/utils_avutil.cpp",
"client/src/ffmpeg/ffmpeg_cpp/vc1_common.h",
"client/src/ffmpeg/ffmpeg_cpp/vdpau_compat.h",
"client/src/ffmpeg/ffmpeg_cpp/videodsp.h",
"client/src/ffmpeg/ffmpeg_cpp/vlc.h",
"client/src/ffmpeg/ffmpeg_cpp/vpcc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/vpcc.h",
"client/src/ffmpeg/ffmpeg_cpp/wchar_filename.h",


"client/src/ffmpeg/ffmpeg_cpp/codec/avfft.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/avfft.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/bit_depth_template.tmp",
"client/src/ffmpeg/ffmpeg_cpp/codec/cabac.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/cabac.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/cabac_functions.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/copy_block.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/cpu.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/cpu_internal.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/dct.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/dct.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/dct32_fixed.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/dct32_float.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/dct32_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/dict.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/display.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/display.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/error_resilience.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fdctdsp.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fdctdsp.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft-internal.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft_fixed.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft_fixed_32.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft_float.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft_init_table.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/fft_table.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/fft_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/golomb.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/golomb.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h2645_parse.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h2645_parse.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_cabac.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_cavlc.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264_cavlc.san
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_direct.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_loopfilter.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_mb.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264_mb_template.tmp
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264_mc_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_mvpred.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_mvpred.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_parse.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_parse.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_parser.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_picture.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_ps.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_ps.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_refs.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_sei.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_sei.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264_slice.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264addpx_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264chroma.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264chroma.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264chroma_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264data.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264data.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264dec.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264dec.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264dsp.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264dsp.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264dsp_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264idct.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264idct.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264idct_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264pred.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264pred.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264pred_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/h264qpel.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/h264qpel.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/h264qpel_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/hevc.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/hpel_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/hpeldsp.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/hpeldsp_rnd_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/jfdctfst.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/libx264.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/mathtables.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/mdct_fixed.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/mdct_fixed_32.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/mdct_float.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/mdct_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/me_cmp.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/motion_vector.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/nvenc.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/nvenc.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/nvenc_h264.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/pel_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/pixels.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/rangecoder.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/rdft.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/rdft.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/rectangle.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/rnd_avg.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/rnd_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/simple_idct.h",
#"client/src/ffmpeg/ffmpeg_cpp/codec/simple_idct_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/snow.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/snow.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/snow_dwt.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/snow_dwt.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/snowdata.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/startcode.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/startcode.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/timer.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/videodsp.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/videodsp_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/vlc.h",

"client/src/ffmpeg/ffmpeg_cpp/codec/x86/asm.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/cabac.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/constants.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/constants.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/cpu.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/dct_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/fdct.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/fdctdsp_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/fpel.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/h264_i386.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/h264_intrapred_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/h264_qpel.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/h264chroma_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/h264dsp_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/hpeldsp_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/inline_asm.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/me_cmp_init.cpp",
#"client/src/ffmpeg/ffmpeg_cpp/codec/x86/mpegvideoenc_qns_template.tmp
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/mpegvideoencdsp_init.cpp",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/simple_idct.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/timer.h",
"client/src/ffmpeg/ffmpeg_cpp/codec/x86/videodsp_init.cpp",



"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/file.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/h264dec_probe.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/mov.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/qtpalette.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/qtpalette.h",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/rawdec.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/rawdec.h",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/replaygain.cpp",
"client/src/ffmpeg/ffmpeg_cpp/mp4Probe/replaygain.h",


"client/src/ffmpeg/ffmpeg_cpp/audio/audio_convert.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_convert.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_data.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_data.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_fifo.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_fifo.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_mix.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/audio_mix.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/avresample.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/dither.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/dither.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/internal_audio.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/lfg.h",
"client/src/ffmpeg/ffmpeg_cpp/audio/options_avresample.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/resample.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/resample.h",
#"client/src/ffmpeg/ffmpeg_cpp/audio/resample_template.ctmp"
"client/src/ffmpeg/ffmpeg_cpp/audio/utils_audio.cpp",
"client/src/ffmpeg/ffmpeg_cpp/audio/version.h",

 

    "client/src/rtsp/ffmpeg/compat/fdk-aac/FDK_audio.h", 
    "client/src/rtsp/ffmpeg/compat/fdk-aac/aacenc_lib.h", 
    "client/src/rtsp/ffmpeg/compat/fdk-aac/machine_type.h",
    "client/src/rtsp/ffmpeg/compat/fdk-aac/aacdecoder_lib.h",
    "client/src/rtsp/ffmpeg/compat/fdk-aac/genericStds.h",

    "client/src/rtsp/ffmpeg/compat/zlib/zlib.h",
    "client/src/rtsp/ffmpeg/compat/zlib/zconf.h",
    



"client/src/broadcast/main/Streamer.cpp",
"client/src/broadcast/src/audiopacketmodule.cpp",
"client/src/broadcast/src/fakeaudiodevicemodule.cpp",
"client/src/broadcast/src/multiplexmediacapturer.cpp",
"client/src/broadcast/src/peer.cpp",
"client/src/broadcast/src/peerfactorycontext.cpp",
"client/src/broadcast/src/peermanager.cpp",
"client/src/broadcast/src/signaler.cpp",
"client/src/broadcast/src/util.cpp",
"client/src/broadcast/src/videopacketsource.cpp",


"client/src/broadcast/include/webrtc/audiopacketmodule.h",
"client/src/broadcast/include/webrtc/fakeaudiodevicemodule.h",
"client/src/broadcast/include/webrtc/multiplexmediacapturer.h",
"client/src/broadcast/include/webrtc/peer.h",
"client/src/broadcast/include/webrtc/peerfactorycontext.h",
"client/src/broadcast/include/webrtc/peermanager.h",
"client/src/broadcast/include/webrtc/recordingpeer.h",
"client/src/broadcast/include/webrtc/signaler.h",
"client/src/broadcast/include/webrtc/streamrecorder.h",
"client/src/broadcast/include/webrtc/util.h",
"client/src/broadcast/include/webrtc/videopacketsource.h",
"client/src/broadcast/include/webrtc/webrtc.h",
"client/src/broadcast/include/webrtc/yuvframegenerator.h",
"client/src/broadcast/include/webrtc/yuvvideocapturer.h",


"client/src/ffmpeg/src/audiobuffer.cpp",
"client/src/ffmpeg/src/audiocontext.cpp",
"client/src/ffmpeg/src/audiodecoder.cpp",
"client/src/ffmpeg/src/audioresampler.cpp",
"client/src/ffmpeg/src/codec.cpp",
"client/src/ffmpeg/src/ffmpeg.cpp",
"client/src/ffmpeg/src/mediacapture.cpp",
"client/src/ffmpeg/src/packet.cpp",
"client/src/ffmpeg/src/videocontext.cpp",
"client/src/ffmpeg/src/videodecoder.cpp",


"client/src/ffmpeg/include/ff/audiobuffer.h",
"client/src/ffmpeg/include/ff/audiocapture.h",
"client/src/ffmpeg/include/ff/audiocontext.h",
"client/src/ffmpeg/include/ff/audiodecoder.h",
"client/src/ffmpeg/include/ff/audioencoder.h",
"client/src/ffmpeg/include/ff/audioresampler.h",
"client/src/ffmpeg/include/ff/codec.h",
"client/src/ffmpeg/include/ff/devicemanager.h",
"client/src/ffmpeg/include/ff/ff.h",
"client/src/ffmpeg/include/ff/ffmpeg.h",
"client/src/ffmpeg/include/ff/format.h",
"client/src/ffmpeg/include/ff/fpscounter.h",
"client/src/ffmpeg/include/ff/icapture.h",
"client/src/ffmpeg/include/ff/iencoder.h",
"client/src/ffmpeg/include/ff/mediacapture.h",
"client/src/ffmpeg/include/ff/multiplexencoder.h",
"client/src/ffmpeg/include/ff/multiplexpacketencoder.h",
"client/src/ffmpeg/include/ff/packet.h",
"client/src/ffmpeg/include/ff/videocontext.h",
"client/src/ffmpeg/include/ff/videoconverter.h",
"client/src/ffmpeg/include/ff/videodecoder.h",

   ]

  

    if(is_win){
    #configs += [ "//build/config/win:windowed" ]
    defines = [ "WEBRTC_WIN" , "HTTPSSL",  ]

  }



    deps = [
      ":libuv",
#      "//:webrtc_common",
      ":libuv",
      ":socketioset",
       "//third_party/boringssl"
    ]

    #cflags = [ "-fexceptions" ]
    #cflags_cc = [ "-fexceptions"]
    



    if (is_win) {
    libs = [
      #"userenv.lib",
      #"iphlpapi.lib",
      "strmiids.lib",
      "Secur32.lib",
      "wmcodecdspuuid.lib",
      "dmoguids.lib",
      "msdmo.lib",
      "c:/workspace/webrtc/src/out/m89/obj/webrtc.lib",
      "E:\UnrealEngine\Engine\Source\ThirdParty\ffmpeg4.2\lib\fdk-aac.lib",
      "D:\fb\local64\lib\libx264.lib",
      #"dxgi.lib",
      #"d3d11.lib",   


    ]
    }


    ldflags = [
      "/largeaddressaware:no",
    ]


    configs += [
       ":socketio_private_config",
    ]
    public_configs = [ ":socketio_config" ]

    }
